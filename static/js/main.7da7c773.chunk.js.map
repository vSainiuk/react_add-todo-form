{"version":3,"sources":["api/users.ts","services/GetUserById.ts","services/initialTodos.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","u","initialTodos","title","completed","map","todo","user","UserInfo","className","href","TodoInfo","cn","TodoList","todos","App","useState","setTodos","setTitle","hasErrorTitle","setHasErrorTitle","setUserId","hasErrorChooseUser","setHasErrorChooseUser","count","setCount","action","method","onSubmit","event","preventDefault","trim","currentCount","newTodo","numArray","Math","max","getMaxId","prev","noValidate","htmlFor","value","type","placeholder","onChange","target","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7da7c773.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport const getUserById = (userId: number) => {\n  return usersFromServer.find((u) => u.id === userId) as User;\n};\n","import todosFromServer from '../api/todos';\nimport { Todo } from '../types/Todo';\nimport { getUserById } from './GetUserById';\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={\n        cn('TodoInfo', { 'TodoInfo--completed': todo.completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo user={todo.user} key={todo.user.id} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          data-id={todo.id}\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { initialTodos } from './services/initialTodos';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport { Todo } from './types/Todo';\nimport { getUserById } from './services/GetUserById';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const [title, setTitle] = useState('');\n  const [hasErrorTitle, setHasErrorTitle] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasErrorChooseUser, setHasErrorChooseUser] = useState(false);\n\n  const [count, setCount] = useState(0);\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const onAdd = (newTodo: Todo) => {\n    setTodos((prev) => [...prev, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setHasErrorTitle(true);\n    }\n\n    if (!userId) {\n      setHasErrorChooseUser(true);\n    }\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    setCount((currentCount) => currentCount + 1);\n\n    const getMaxId = () => {\n      const numArray = todos.map((todo) => todo.id);\n\n      return Math.max(...numArray);\n    };\n\n    onAdd({\n      id: getMaxId() + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasErrorTitle(false);\n  };\n\n  const handleChooseUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasErrorChooseUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        key={count}\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        noValidate\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            value={title}\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            onChange={handleTitle}\n            required\n          />\n          {hasErrorTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            value={userId}\n            data-cy=\"userSelect\"\n            onChange={handleChooseUser}\n            required\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(u => (\n              <option value={u.id}>{u.name}</option>\n            ))}\n          </select>\n\n          {hasErrorChooseUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}