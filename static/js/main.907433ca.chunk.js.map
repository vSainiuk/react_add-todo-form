{"version":3,"sources":["api/todos.ts","api/users.ts","services/GetUserById.ts","services/initialTodos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","getUserById","usersFromServer","find","user","initialTodos","todosFromServer","map","todo","UserInfo","className","href","TodoInfo","cn","TodoList","todos","Form","onAdd","useState","setTitle","isValidTitle","setIsValidTitle","setUserId","isValidUser","setIsValidUser","action","method","onSubmit","event","preventDefault","trim","numArray","Math","max","getMaxId","noValidate","htmlFor","value","type","placeholder","onChange","target","required","disabled","App","setTodos","Date","date","setDate","newTodo","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.907433ca.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport const getUserById = (userId: number) => {\n  return usersFromServer.find((user) => user.id === userId) as User;\n};\n","import todosFromServer from '../api/todos';\nimport { Todo } from '../types/Todo';\nimport { getUserById } from './GetUserById';\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={\n        cn('TodoInfo', { 'TodoInfo--completed': todo.completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo user={todo.user} key={todo.user.id} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          data-id={todo.id}\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport todos from '../../api/todos';\nimport { getUserById } from '../../services/GetUserById';\nimport usersFromServer from '../../api/users';\n\ninterface Props {\n  onAdd: (newValue: Todo) => void;\n}\n\nexport const Form: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [isValidTitle, setIsValidTitle] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [isValidUser, setIsValidUser] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim() || !userId) {\n      if (!title.trim()) {\n        setIsValidTitle(true);\n      }\n\n      if (!userId) {\n        setIsValidUser(true);\n      }\n\n      return;\n    }\n\n    const getMaxId = () => {\n      const numArray = todos.map((todo) => todo.id);\n\n      return Math.max(...numArray);\n    };\n\n    onAdd({\n      id: getMaxId() + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsValidTitle(false);\n  };\n\n  const handleChooseUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setIsValidUser(false);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n      noValidate\n    >\n      <div className=\"field\">\n        <label htmlFor=\"titleInput\">Title: </label>\n        <input\n          id=\"titleInput\"\n          value={title}\n          type=\"text\"\n          placeholder=\"Enter a title\"\n          data-cy=\"titleInput\"\n          onChange={handleTitle}\n          required\n        />\n        {isValidTitle && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"userSelect\">User: </label>\n        <select\n          id=\"userSelect\"\n          value={userId}\n          data-cy=\"userSelect\"\n          onChange={handleChooseUser}\n          required\n        >\n          <option value=\"0\" disabled>\n            Choose a user\n          </option>\n          {usersFromServer.map((user) => (\n            <option key={user.id} value={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {isValidUser && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { initialTodos } from './services/initialTodos';\nimport { TodoList } from './components/TodoList';\n\nimport { Todo } from './types/Todo';\nimport { Form } from './components/Form/Form';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialTodos);\n  const [date, setDate] = useState(+new Date());\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos((prev) => [...prev, newTodo]);\n    setDate(+new Date());\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <Form onAdd={addTodo} key={date} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}